package main

import (
	"fmt"
	"strings"
)

func main(){
	//Counting DNA Nucleotides
	dna := "GAGGTCACTCACCGCGTTTACCGAGAGCTCTGTGGAGTGTAATGTATAGTGCCGAGGGACGCGCCGACGGGGGACCTGGTCCATCATAGGTGTTCTAAGCCCACGGGAAGACGGAGCGAGTCACTTTGTCACGTAACTTTCTACATAATGTGAGATAGATCCAACTGTGGCAGGTTGCGGATGCCGCGGGTAGGACGCGCAATAGCACGAGAGGCCCTCTCTATTAATACCCGGCGTTAGTGCCCATAGATTCTGGCTAGGCCCTGACGTCATGAAGTTGACAGACTGAGCACCGAGTGCCACCCACCCGTTCTCTTAGTATAAATATAGACTCACCATCTTAATGACGTCGTGATTTCCCACCTGTTTGAACAAAGTTGGATCTGCCACTTCAAGAAAGTACTACCTAGACACTGGCAGGTAGAGGCAGCCCTTCTGGTCGACAGCAACTATTGGCTCTGTTCTCAAGCAGGAGGTTAAAAACAGCGGTGTTTTCTTGAAACCGTTTCTCGGTGAGCATGCCCGCAACGTCGGTGAGCTGCCGGATGTTTACCTTGCGCGGGGCGATGTCGCTAGAGTTTACATTGCGCCGGGAATTTTTACTGATTGGCCCTAGCATTGCAGTAGCCGATCTCATGGCTCCCTAGAGATCTAATGGAGTTTTATTTACATGCTTATGTGGGATCGGCCCTTGCAGGTTCCTCAAGATAACGCTGCCACTGTTCGACGCGACAAGAAGACAACAGCCCTACGAAGGTCTCGAGGCTTCGCAATTTATACCAAGAGAAATCCGTCTATTCTAAACTTAATCTCGTTGGTGTACTCTGTGCTACCCTAGGGTTGCAACTACTGTGCCTTGTATTTCTTAAGGGCTATCTCCAATGTGACTTATTAAGTCAGTAGCGCGACACGGGTCCAAATCTTTTA"
	fmt.Println(countDnaNucleotides(dna))
	//Transcribing DNA into RNA
	dna = "TGGAAACCTAACTATCGATGTGCAACTCGTTGGTTGAGTACCGACTCAGGTAAAGGTAACGCGCGGAAGATGGCACTCTACAATTCAAACTGCAAACCCCCGTCGGGCCTAAGGTAGATGCGTGTCTTCAATACCGTTCGCAATTCAGGATTGCTGATGTTGTCTGTAGGGTGCCGACAACCTCTGCCGCGGCGTTCAGGGCCTTAACGCTTGATTTCTTTACTCTTACTTTTTTCGACGCCGCCCAGGCGCCACGTAACGTAATTAAGGCCATCGGTAGCAGAAAACTGAGGCTAATGAATTCGTCTATATACTTCGGATCCTATAAAACCCAGTTGTGTCTATCCCGAACATCGAATTTCAGTCGACCCTTCGGACGATACCATGTAAACTCTCAACCAGATTGCCACGTGGAAGATCTCGGCCTTTACTCCATTCGACAAGTGTCGTGTACCCCTTGCCACTATAAAGAGTATGATTGAGCCTTACAAGCGGTGCTCCATTTAGGATATGTAAGCTATAGAGGATTCCAAGCCGCGGTAGAGGAATGTCGTGATCGTACGTCCTTATTGGTAAGTACCGAAATGTCAGGTTTTCCCTTGCGTGGGTTCGTTCAGGGCATGGTAGGACCGCAAAGTAGATGTAGCAATGGAGATTCGTCATGATGAGAAGAGTAGATCAGGGCAAAGGCATTGGGAGTCCCCGCGTAATACCCAGTGATTTTTGCAAGTAAGCATGCTTATACTACGGCGGCGGTCCCAGACCAACGCAAAGCTTTTTGTGTATCCTCTAAACCTTTAAGAATCTGATTACGCCGGTACGAGCAGGCGACCATGTAAACTCTTTAAAGGTTAGACGAGACCGTGACTGTCTCCTTACCGGGGCATCAGCTTGATTTCAAGGGTTGTTCCATCAGGAACTCGCAGATAGGGTCTCTTGGGTGAGTGCGGCCCAGAGGAC"
	fmt.Println(transcribeDnaIntoRna(dna))
	//Complementing a Strand of DNA
	dna ="ACGCTATGTTAATATGTCGGTTCCGGGTATGCCCAGTGCGGATATGGTGATAGATTGCCAGAACTAGTTTCTCGGCCACCGTCGAAGTAACTGAACACGGAGTATACTATGCCGGGTTTCATCCACCCAGAATCAACGATTATTAAGTTCTCAAAGTCTATCCGAACCAGTCTTTGCGGAGGCGATATTATCGTTAACCAATGGTGTCTTACAGACTTACATGCACTAAGCGGGGATCGCGGGGAATATGAACTCGCCCGGGGGGGACCAAAACCCCCCCCCAGTTTGCTGTGGGGATATGACGCCCATCGGTTCTAGACGTTTACGGGCCCCCGTACCTAATTGCAGTAGGTCGTTGTAGCTGCCCCGTAAATAACCTTAAAGCGAGACAAGCAGTTCGAGGACTGAGCATCCCACTGCGTCGCCCTGCGTCCGTCCGACACGAAAGTCAAAGTATGGCGACGGTTAGGTGGCGCACTTCCGGATAGTCGATGTTAGCGATCTTGAGAATTTAAGAGCCACGCATCACGACGATGCCCGTTGGGTCCTTTCTTACGACCAGATTCATCGTTCCCGTCCGTGAAGCACTTACTGGTCTATTTTGTGTTTCTGATCTACTTCCTTACATTGCTTGTTACATGAAATGAGAGCCTTGGCCGAATCTTATTGGACTTCGGGCTTGTGGGTGTCAATGGGAGGTTGCGGGAGTGTTCGTTAATGTAAGCTTGCCACTAAACTGTAAGCAGGTCCACATACAGACAACGTGGGCGTAGATATCTGCGATACGAGGAACAAATTGCCTGGGCCCCAACAGTTTACATGTAGCGACGGCTTCACTCCTCGCCCTAGGCTGAAGTGAGATCTCATCAGAAGAGTTAGCGCAGACAGTCAGTCTACGCATT"
	fmt.Println(complementStrandOfDna(dna))
	//Translating RNA into Protein
	rna := "AUGUGCGACGAAUCGGCAAUAGCAUGGAUCGGUUAUAUUAUGUUUCCGAACACCCCAUGUAACGACCCUGGAGUUGUAGGACGAUUCCUCGGGGAGUUCUUCUAUUUCGAUUUCCCUGUAACCUUAGUGAAUAGCACUUCAGACCUAUCUCGCUAUAGUAAAUGCUCGACAGUGGAGGUGUGGCCCACCCGUUAUCCAAUAAAGAAACUCUCGCUACUCGGAGAUGAUCAAGUUUCCACAUCAGUACAGGUCCCGCUGGGCGGUGCCUCGCAGCCAAUGAGCACGCGGCCCGGUAUCAUGGCGAAUUAUGUGACCAUGAACUGUCUCUUAGUUCGUUCACUCGCUUGCUGUGACUUAAAUGGCUUUGGCACAGUAGGGUUUAACCCUACCAUCAGAUUAUUAGGUCGCUUUCGUGUAAGAGUAUUCUUGCUUGAAAAAGGUUCUUGUGACCCUCGGUCUAGUAUACUUGUAGAUUCUUUUGCUUGGCCAGCAGGGAUCCCCUCUCUCCUUUUGGCGGGCGUUCACCCAUGGAGAGUGUGCCCCGUCUCGGAGUGCUCACUGCGUUGGAAUGUACCUGUUGUCCUUAAGCGAGUCCGACGCCCUUCGAAUCACCAGUCUAGCAUCAUCCGUCCUAGUACAAGCCUGGGGGUACCCACCGGGGGUUUGUUACCUCGUCUGGAUGGAGCCAGUGUCCACCCCAAGCUUUCCCUACUAAAACGGUCCUUGGGUGGGUUAUCCAAGUUGCGGCUUAAUAUACAAGCAGACCCGUACGCCGAAAUUGGUUCGUCAAUCCGUGCCCCCUCUGACCCAUAUAUGCACGCUUUUAUGAAGCUGUGGAUCUGUGUCAGUGGUGCGACUCGAAUCUCAGGCUACUUUUCUCACGAAAUUAGAAUCAAGCUCUGGUCUAGUUCCGAGUGCGCUACCAUCUGUCAGAUUGCUAAUUUGGCUGUAGGAAAAAAAGGUCCGGGACCCAGGUCGAGUUGUAACGCACAUGACAGUCACAUUCGGCCGAACUUGCUCGAAUUACAAUGUGACGGACUUGAGCAUGGCUUCAUAGUAGUGGUGUCGUUCCACCGGUGUGGGAAUACUCGAUGCUUCGGUAUGACCAGUUCAGCAACUCGCCUCCGUAAUCAUCUCCUUGUGUGGGACCGGGAUACGAUAGGACCUCGCAGUACUUAUCAAAGUGAUGUUAGGUCCGGUCUAACUCGCGGUUGGGCUUCGCUCAAAGUCGCCAACCUGGCGGGAGUUCCGAGGAGUCCACCGCCAUGCCGCGAACCCGGUAACCAGAUGGGUAGUUUGCUAUGCCGAGGACGCCAUAGCCAUGGCUUCAUUUAUUUUCUUAUCAUAGAUAGCAAGACAUCAAUUCCCGGUCCGCCUACAAAAGGCGUCGAAUUCUCACCUCGUACCGCCUUUACGAAGAUCGGCAUGUAUACCGGCUGGCCGUCACUAUUGGGGAACAAUGCUACUAGGAUGAAGAAUGACCGGCGAAAGGGAUUAAUAUUGAUCAACUGCUGCUUUGUUGAGUCUGCAUUCCCUGGCGAUCUCACUAUAUAUUUCAUCCCCCCAUUACAAAUCACACUUACCCUAUGUUAUAAGGAUAGUGGAAGCCCCAUAGUUGCCUUUGGAUUCUCGUGGUCCACACCAUGGUACGUCACACUAAAGCGCAUAGCGCAGGCUUCUGGCGCUAGAAGAUUGAGCUUCGUGACUAAGAGAGGGACCUCACGCUCCAGAGGCGGGCACUUUAUACGAUUGCUUAUUAGGUCGGCUGUAUUCGUUGCCGCUGUUUUAUUAAGCGCCAUGUCGUGGCAUGUACUCGGCGAAACGCCCAAAUCCUUUAUUUGUGCUUGCCCGGUUAGUGACCAUGAAACCCACCACCCCAUCAGAGGCGAUAAGUCGAUGACUUGUUCAAUGAUUGUUGUGAUUGACUGCAUGAUACCGUGUGAAUGCUCAAUGCACUCACGCCGACCUAUCGUAGACGAUCAGGAAAGUAAGACCGACUUCGUUGUGUCUGAAGGCCACAAUUGUCAGUCCUUCAUAAACGUACAGUACUCUCUAAAAAUACUCCUAUGUGAUCUGCAAUGUGCAAAAGCAGUACGUGCCCCAAGUUCAGAGGAACACAAAGUCAACCUACAAUACACUGGCGGCUCCCCCUCGGCUCUACGCGGCGCUGAUUCUUCGGAGUGCCGCGCUGGCUGGAUAACUUAUUGGUACUUAGGGUCUAGUCACAUACAGGUACCGCUAAGUGCUUGUAAAGCUUUCAUUCACGGCUCUAUGAGAGCCUCUCGUCUCUCACGCUCUGUUUGCAAAUGGUGCGGCCCUGUAUGCCUAUUAAUGUGCGGACCGACUUUAGAUGUGGCAUGGAGUUACCAAAAGCCCGACCAUCUCGGAUGGACAUGUCGUCCACGUCUCGCUCGACCCUCGAUGUCCAUAUGUCAGUCCGGACAACUGCCAACAAGUCUGCCUCUCAUCCGAGUCACAGAAAGCUACGUACGAUUUCACGCCUAUACAGCACGUGGGCGGAGAGCUUCGGGGUUAAUAUACAUCCAAGGCCGUACGGCACAAGAAAAUAGAUUAGAGGCAUUUGCACAUGCAAGAUACAAUCCUGGGUCACGGAUCAGGCUAGACAAGAGUCAAACUGUGUCCAAUACAUUUAGCGUAUACUCGUCCGCUCCAAGGACUGGGGUUUCCGAUUUGCGCUGGUAUGCGAAAGUGCCGGUGCGUGGGAGUCGGGACCUCGUAUGGGUCGAUUUCGUAGCGGGUGUCGGUGACCUGAUGCGUGCUUUUAUCGAAGUCCACUUAGUAAAUCAGAAGCUUUCUCGGUUUUUGUUUACGUUAUCCUGUCAAAAAGUGAACCAAUAUGGAGACCGCCGGCGCCCUCUUCUGUCCCUAGCCACACGCCCUUGGCUAAGCCAUUGUAGUGCAUUUUGGUCAGUGCUUCUUCUCCCUGUUGCUCUACUCUACAUUCCCGCUAGCGGGGAUUUAAACAAAAAUCGUCUACGGAGAUUGUCAUCUUCAUGGAAAUCCUGUUAUCAUAUGUUUUCGCCUAUUUACAACCGCUUGGAGGAAAUACGUGGUAGCGGGCCAAUCGCAUGGCAGUUCUCUAAUUUUAGUGACUGGCUAACUGGGCAGUUAAAACAGCCUCAUGUGCUAUGCGUAGCUACCAUCCCAUAUUCAGUCAUUGCACGAGUUUGCCGUGGGAGGAUGAGUCUCUCCAACUUAUCCUGCUACACAGUACCCUGCUCCACUCCGACGUACCGAUCCUCAGCGGACAUGACUGUCCUUAACAUGGUUAUCCUGUUGCCUCACGUCAAAAGAUUAUUCAUUCGGAUUGUCAUAGCCGGCGUGAACUUAGAGGGUGGGCCAUGGAAGUAUGUAGACGUGUGUCGGAGGCAAAGAUUCGAUAUGGGCAUCCACGGUCUUGAUGCCGAGCUAUUCUAUGUUCAGGUUGCUUAUGAAGACGACCGUCCCGACCUGCCCCAUGUAUGCCCCCUCUCAUAUAGUAUUUCGGCUAGGAAUCGGGGUCCACCUCAUCACCCUCCUCGUGUCACGAUUCGUACUGUGAGGAUCGGCGCUCUCCGCGUUGUUUUAUUUCUUGGUCUGCGCACCCUGCGGGAGAUACUAUUAGUGUGCUCAUUUCAUGCCUACUUACUGAGGCAGCUUGAAUCCCGUCAAAUGAACCUAGGGGCAUUGGUGACGACAAACCUCGUCUUACGCUUAGGACGUGAUCUACGAUCGGAGCAUCCACAUCAUCUGCUUGAGUUAUUGGCUUGUUUCCUCAAGGGCAUGCGGCGGGAGGGCUCACAGCGUCCGGAUGGCUACCGUCUUACGGUUUACGAAAACCACCGAUUCCGUCCCACCACGGAAAAUCCCGUGGGAGAAGACAGCCUUAACAGGAGCACUCUAGUUGUAAUGUGUCCAUACUCCCUGGUUGACAGCUCCCGCAAAUAUAGAGCUAUAACGGGAAGGGCAGAUCGUCUUACAGGAAUGCUAUGCCGGUGCGCAGGAGCUGAAUUAAUGUGCGUCCUCUACCGAAGUUUCAAGUGGCCCAUCUCACAUCCUUGCUCCCAAGUUCACCUGGCCCCCUCUUUGUACUUAUUAGAACCAGGGGUGACCAUGGUGUCGAACGGGUUCGUUGUCCUAGAAGAUACAAAACCGGCUAAGCAAUAUCUUAUCUCACCAUACGAACGACAGGUUAUGGGGAACAGGAUCGUGCUCGGGGCUGAUACUCACGGAUACGGUUCCUGGAUAGGCAUACGUCUCUCAGUUCCUCGCCAAGAUACAAAAGAUCGUAUCGUACCUCCUCAUUAUUAUAUUCAGUUACAACCCUUGCUAAUUAUGCCAACCAGAGUGUUGCACGGAGCUAAAAGUCGAGCCGUUUGGAACGGACUUUUACCCGCGAAAAGGAGGAGCACUCUCGCCACGUACGACGUCUAUUCUUAUCACUACUACGGAGGAGUGCGAACAGGCCACUUGAAGAUUCUCUCCGGUAGAGUACAUGACACGUCGACGAAUCCACCGCAAUACACUUUAUCGCUCUCAACCGCCCUUAAUGAUCCCUUCUACGCACGUUGCGAAACACGCGUGGACGAAACGGCCAGAUGUCUGCCGGCGAACGAAUGGACGAGAGUACCAUAUGUGGAACGUAAGAGCACUCCCGGUUCGAGCAAGCUCGUCAUAUGCGGCGCUUGUUCCGCCGACUUGCAAUGCGCUCCAGCAAUGGGUCCAAACUCCAGGCCCGUUACUACGGACUUAUAUAGCAGUGGUCUUGGAGCUGACUGCCCGUGCUGGGCCAGUGAUCCCUUUGCCCGUGUAGUCCGGAGUGCGCCUAAGACACAAUACAGUACAGAACACAGAGGGUGCCGAAUUGAGCGAGAAGGGCCAGAUUGCAUAAUACGAACGGUACGAGAAAGUCUGUCGCAAGACCAACAGGGCACGACUUGCCCCGCUACGGUAAUCAAGCAAACUAGCUUUGCCACAAUAGGUAUGGAGGACGCCAACCUUAGAUCCCGACCCUCUCAGUUCGUACAUCUGUUCACAAAAUUCCAAAGGCGACGAUCUGUAGUACAGGCAUCACACCUGCGACAUACCAGUGGCAAUCUGGCAGCGCUUAGCCAGACCAGUGCUUUCUGUGCGGGCCUGAGAAGGAUGUUUCAGGGCUUGAUCGCUCAAACGCAAAAUGCGAGAACGUUACUCAGCUUCUGGCAAGGCAUAUUAUUUUGGGGUGUCUGUAAUUCCGUGCCUAUUUGUAGUUGCAUCACUGUUCGACUCGUAACGUUAUUGCUCAGCAUAAUGGGUUCUUGUGGCGCGGGGCUGACCACCAGGAAUCUUUGGAGGGCCCGGCUUCAAAACGGUACGCCUUGCCGUUCGUCGCAUAUAGUUACAGGACCUCCUGUCGCCCAUGGAGCCCCAGAAUGUAACGAUCACGGCUCAGCAAAAAAAGUAAUUAUGUUGAGCCCCUCGUUAGUGUUCGAUUUGCAGUUUUCUUUAUGUAAUAGCAACCUCUUUCGCUCGAGUCACAACGUGUUACUAUUAAGGCAAAAAAGGCGCGAUGUCCUGUAUAAAUUUCACAUAUAUGCCACCGUCUCACUUAAAGUCAUGCAGAUGGGUUGCUCCACCGAAGUUUCCGAGUCCCAUCUCAAUAACAUGGGCCACGUUAAAGGACUGAACCAAAACCACAGUGAACAACUGGUGCCGCGAUCGAGCCAGCCGGUUAACACUGACACCAACCUCACGGGUCUUAAGUAUCUCUCCCUAUACUCACCCUCGACAUUUACGGCUGCAAACGAGCAAUCCUCUCGGUGGCACUUUAUACAUGUGAGAAAUAACUGGCCGUAUUGUAUUGCGCACCACAGGGCGAGUCAACACGUUUCUGGCAUUACUCCGUUUGUAGUAUCGGCGAGAGGACGAUACGGCGGAGCUAGAGAUCCGCGGCGUCGAUACGCCAGUACAUGGAUCAGUCUACUAUGGCUGGAUUCGGGGGCUAGGGUAAGAGCCCACAUCAGUGCGAUACGGUGCAUUGAAGCUACAUGCUCGGCACGAACUACUCCUGAUAUCCUCCAGGGUGGUUAUGAUAAACUUUCCCAGCGUCUAUCGUGUUUGCAUCGAACGCCCCGCCGCCAGUUGCAGUUAAGUGGACAAGACCAAUUGCAAAAGCAGGCAUUACAAAUUUGCCGGGCUAUCUUUCAAUCAAUGUCAGCUGCGCACGUUCUUAUCUUGACCAUCAGGCGCCGGCCCUAUCAUCCGCACGCUGAUAGACUUACUCGCGAUCCUACCUUUCGUGAGUACAGACCUGGCCCACCCUCUCCUAUCCGCUGGGUACUUAGGCAUGUCUCCAACUUUAGUGUCAUUGCUGAAAUAGUGGCAGUCAAUGGAUCCCGGAGGGUAUGGGACAUCAGCACUCGCGCUAGACUGCUAAAACCAGUAAUUAAGUCGCUGGGCGCGAACGCCACCCUGUCGGCGAAAACCCACACAGUGUUGAUAUAUUACAUCGAUCCGUCUCAGCGGCUCAUGCUCUAUUCAAGACUCUCACUAGGGGUUUACGCCGCAUUGCCUGUUGAUUACCAGUACUCCGCGAUCACAUGUGGUGGCACUCCUCGGAUUAUCUGUCCACGACGGCUCAAACUUAAUCCCGAUUUUCCCCUUCUGACGAAGGGUGAUAGGCGAGACAGGUCCGGGGUAUCAGUCAACCGAUCAAAAGCUAUUCACGUUAAGACGAGCAAAGAGCGUCGACGUAAUGUGGUUAUAUCUGCAGGCGGCUGUCCAGUGUGGUUACUAUUGUAUAUUUAUUGUGCCCAGCUCUGUCGUAACCACCUACUUUUCCGCGUCGAUUGGCCACUGGCUCGCAUACCUCACUUUAUUUUGACUUGUAAAAGCUGCGACAGUGGACUUGUUCUGGCCCACAAAGGGCUACCUGUAAGAUUGGAGAUGACUCAUUGCAUAGAUUCGUAUCUGGGCCGUAUUCGACUGUUAUUCUAUUCGUGUAACUCCAGACAAGGAUUCUGGGACUUUGGCUGCUGCGCGUGGCCACGCACGGGCGAGUGCUGGGGUCACACCGCGUACCUCCCUGACCCCAUACGUCCCUGCUGUUACCACUACCGACGCUUAGCCCAUCGUAUACCCCUAGAGCUUGAAGAUUUUGUCGUAGGUCUCAUACAGACCGGGUCUUACUGUAAGGCCACGGAAUUAUGUUUGGACCUGAGGGUCACAUUUUACUGGUAUCCUCGCACCCGAAUCGUGAAAAUACCACGACGUAGAGCCCCGAGAAAGCCUUUCGUAGGGGAGAACUUGGUCUUUAAGAUCCUUGAACUUGUCCCACAGCGUUUUGCAAUCAAACUUAUAAGCUGCGUCAUCGGCUUGCUGACUGGUUCAAGGGCCCGAUUAUGCCUGUUGAGUUUUAUGCAGACACAGGUUGAGGCCGGCUCGAAGCAAACAACUCUAUCCACAGACCCUUACAUAUUACGCUAUAUCCCAAUGGAUCCCUGCCAAACCCAAGAAGUGGUGUGGCCAAGUCCCGAAAGACCGUUGCCGAUGCCACUUCACGCACGACUUCGUAUCUACGGCAGUCAGCGCUCAUCGGCCCAGGCGUAUUCCGGCAGGAAACGAUGGAUAGCAUUCUUACGCAUAUACCCUGCAGUAAUUUUGCAGCCUUCACGGAUGGACAAACAUCGCAUCCCCCCUCCUCCUAAGGAUGCGUAUAUUGAUGGUGGUCCUACAGCGAUGGCCUCCCGAUUAGCUCACAGAGGGCUGACUUUUCGGAAAACGCACCGGUUCUUGUACCAGUUUAUUCUGAUUAUUUUGGUGAUCAGCACCGUCCUUCAUAAGUUAGUCAGCAGACUAGACACAUCUAUCGAAUUCAGUAUCUGUCUUGUAGUACAAAAGCCACUCGCUACGGAGCAUGUAACUGUUAAGACGUUCGAAUGUAGGUGUCAUGGGGGGAUGUUGAAUACGUUACAGCCGUGCUGUAAUCCCUCGAGCCACGGGGUCCUGGGUUCCCACAGGACUGUCGCCUUGCCAAGAAAUGAUUUACCUCAGAUGCGCGAGGACUCUAUUUCCGGUCAAGCAAUGGUCUUGUCCUGGUACGCCACCACGUUCCGCUUGCUUUGCGACCGGCCCAAAUGGGUCGCAAUCGCAGGCUGUCGGUUAUGGCCGGUCGAAUGGAGCGGAGUAAAAAUCCCUAGAGGCUAUAGCGUUAUAGAUGUAACAGGUGAGCAUAACUGUCUGUGCGACUGUCGACCACCAAAAGUCAGAACUCGGGAUCUCGCAGAACACAUACCAUUUCUCGUGAUGUUGAGUUUUGCUUCUCCUGACGUUUGGGAUAUACUGAGGGCUUCACGAGCAACUUCCUCCGUACCAAACUAUCAAAAGAUCGUGCAAUCCCAGGGUAAGUCGAACGGAAUCAUCGCUCACUUAAACGGUAGGGAGCCACAGCCAUCAACAGGAUUAAUGUGGGACAUUGACCUGGAUAUCGCUUGGAUGCCAUUAAGAUCUGAAUUACCUAAGAUCCUGGAAUUGGUGGUUGACCACUUUAUCUGCCCCCGCACGCUGUUAGCUCUCAUCAACGUGGAACUAAGGCACUGUUAUAAUAAAACCCAGGAGAGGGGACCCCCAGAGGUUGCAGAACACUCUUGCAAGCAACUUUACAGCAGAGCGAGUCCUGCUGAGUCAAACAGAAAAAGCGCCAGUGAGAGAGAAGCCUGUACAAUAGGGGAACUGAGACACACUUGUAGAUCGAUUCGCCGAGGGAUGUCUCGUAAAGCGAGGCAUGCCGGGCGAUACAUCGAUGUAAGGUGCCGAUGCCGAGGAGGUACCGGGGUGCUUGGUGCACGCUGGGCACCACCAAGAUUACGGUCUGUCGCGUUGCGGCUCAGUGCAUCAUAUCUGCCGACGCAAGAAUCUGUUCUGCGUAAGCUGCAGGAUUCGAAGAACUAUCCUCUUUCUACCCUUUGGCACCUUCCAACCACAGUUAUUGCAGGAGACAAAGCCGGAUCUGCCAUGACCGGGUACCGAGAGAUCUGCAGUGCGGUUAGGCAGCGAGGUAACCACGUACAUGGCGCUCGUGCUCAUUCGAGACCUGCUAUAGGACCAAGAUCUACCUCUCCAGCCUUUAGCCGUCUCACAAUAACUCCAGGGUGCCCCACUGUUUCACAAUUAUUCUAUUUCCAGCCGGCUCCUGCACCCAAAGAAAAACAUAUGCACAGGGGGGAUCACCCGAACUGUUGCACGUUCUUUUUUGCCACGGUAAUCCCCUAUGGCUUAUACGUUUGGCUAUUAAAAAAACGAAGACGCAACGUUAAAGAACCGAAUCGAACCAAGUUUAUAGCUCGGUUAUGCAACAGCGAGUGCUGCUCUCCAAGGCUCAUGCCCAGCGCUACAUCAUUAGGCUUGGCUCGGCAGCGAGGGUGGUCACCACGUAAGUUGCGCACGGCGGUUGAGGUAAGCACGUCAGGACAAGACAGCCGCCGUUCGCUAGUUUAUUCGAUUUCGGAUAAGCUGACUGGACCGCUCUUUUUCCCUCUGCGCCUAGGUAUGCGGCUGGUUGCAGAACUAGGCUCAUAUCCCACGGCGGCGCCGGGCUGGACAGAUAGUUCUUCCACAGACCAAUAUAAGGUAAAACCACAAAAUAAUGGACGACUAAGGUGUAAGCACGCACUAAGACAUGUUUCCACUGGAGGGAUCCUGGCUCCCCUGACCAAAUAUAAUGCGCCUUUCGUCCUAUCACAAGUCGUCUUUGGGCGCCCAAUGUGGGAGUAUCUGUUGGUCUUUCCUCAGAACCAGGAGUGUUUGAAAAACGGCAAAUGCUCAAAUUAUCCGACCAGUUAA"
	fmt.Println(translateRnaIntoProtein(rna))

}

func countDnaNucleotides(dna string)(int,int,int,int){
	return strings.Count(dna, "A"),strings.Count(dna, "C"),strings.Count(dna, "G"),strings.Count(dna, "T")
}

func transcribeDnaIntoRna(dna string)(string){
	return strings.Replace(dna, "T","U", -1)
}

func complementStrandOfDna(dna string)(string){
	rune := make([]rune, len(dna))
	for i, r:= range dna{
		rune[i] = r
	}

	for i := 0; i < len(dna)/2; i++{
		rune[i], rune[len(dna) - 1 - i] = rune[len(dna) - 1 - i], rune[i]
	}
	//Didn't find a better way to replace stuff
	r := strings.NewReplacer("T", "a", "G", "c")
	r2 := strings.NewReplacer("A", "T", "C", "G")
	r3 := strings.NewReplacer("a", "A", "c", "C" )
	complement := string(rune)

	return r3.Replace(r2.Replace(r.Replace(complement)))
}

func translateRnaIntoProtein(rna string)(string){
	translated := ""
	runeRna := []rune(rna)
	for i := 0; i < len(runeRna); i+=3{
		translated += string(runeRna[i:i+3])
		translated += " "
	}
	
	proteins := map[string]string{
		"UUU": "F", "UUC": "F",
		"UUA": "L", "UUG": "L",
		"UCU": "S", "UCC": "S",
		"UCA": "S", "UCG": "S",
		"UAU": "Y", "UAC": "Y",
		"UAA": "stop", "UAG": "stop",
		"UGU": "C", "UGC": "C",
		"UGA": "stop",
		"UGG": "W",
		"CUU": "L", "CUC": "L",
		"CUA": "L", "CUG": "L",
		"CCU": "P", "CCC": "P",
		"CCA": "P", "CCG": "P",
		"CAU": "H", "CAC": "H",
		"CAA": "Q", "CAG": "Q",
		"CGU": "R", "CGC": "R",
		"CGA": "R", "CGG": "R",
		"AUU": "I", "AUC": "I",
		"AUA": "I",
		"AUG": "M",
		"ACU": "T", "ACC": "T",
		"ACA": "T", "ACG": "T",
		"AAU": "N", "AAC": "N",
		"AAA": "K", "AAG": "K",
		"AGU": "S", "AGC": "S",
		"AGA": "R", "AGG": "R",
		"GUU": "V", "GUC": "V",
		"GUA": "V", "GUG": "V",
		"GCU": "A", "GCC": "A",
		"GCA": "A", "GCG": "A",
		"GAU": "D", "GAC": "D",
		"GAA": "E", "GAG": "E",
		"GGU": "G", "GGC": "G",
		"GGA": "G", "GGG": "G",
	}
	
	r := strings.Split(translated, " ")
	answer := ""
	for _,rna := range(r){
		if proteins[rna] != "stop"{
			answer += proteins[rna]
		}
	}
	return answer
}


