package main

import (
	"fmt"
	"strings"
)

func main(){
	//Counting DNA Nucleotides
	dna := "GAGGTCACTCACCGCGTTTACCGAGAGCTCTGTGGAGTGTAATGTATAGTGCCGAGGGACGCGCCGACGGGGGACCTGGTCCATCATAGGTGTTCTAAGCCCACGGGAAGACGGAGCGAGTCACTTTGTCACGTAACTTTCTACATAATGTGAGATAGATCCAACTGTGGCAGGTTGCGGATGCCGCGGGTAGGACGCGCAATAGCACGAGAGGCCCTCTCTATTAATACCCGGCGTTAGTGCCCATAGATTCTGGCTAGGCCCTGACGTCATGAAGTTGACAGACTGAGCACCGAGTGCCACCCACCCGTTCTCTTAGTATAAATATAGACTCACCATCTTAATGACGTCGTGATTTCCCACCTGTTTGAACAAAGTTGGATCTGCCACTTCAAGAAAGTACTACCTAGACACTGGCAGGTAGAGGCAGCCCTTCTGGTCGACAGCAACTATTGGCTCTGTTCTCAAGCAGGAGGTTAAAAACAGCGGTGTTTTCTTGAAACCGTTTCTCGGTGAGCATGCCCGCAACGTCGGTGAGCTGCCGGATGTTTACCTTGCGCGGGGCGATGTCGCTAGAGTTTACATTGCGCCGGGAATTTTTACTGATTGGCCCTAGCATTGCAGTAGCCGATCTCATGGCTCCCTAGAGATCTAATGGAGTTTTATTTACATGCTTATGTGGGATCGGCCCTTGCAGGTTCCTCAAGATAACGCTGCCACTGTTCGACGCGACAAGAAGACAACAGCCCTACGAAGGTCTCGAGGCTTCGCAATTTATACCAAGAGAAATCCGTCTATTCTAAACTTAATCTCGTTGGTGTACTCTGTGCTACCCTAGGGTTGCAACTACTGTGCCTTGTATTTCTTAAGGGCTATCTCCAATGTGACTTATTAAGTCAGTAGCGCGACACGGGTCCAAATCTTTTA"
	fmt.Println(countDnaNucleotides(dna))
	//Transcribing DNA into RNA
	dna = "TGGAAACCTAACTATCGATGTGCAACTCGTTGGTTGAGTACCGACTCAGGTAAAGGTAACGCGCGGAAGATGGCACTCTACAATTCAAACTGCAAACCCCCGTCGGGCCTAAGGTAGATGCGTGTCTTCAATACCGTTCGCAATTCAGGATTGCTGATGTTGTCTGTAGGGTGCCGACAACCTCTGCCGCGGCGTTCAGGGCCTTAACGCTTGATTTCTTTACTCTTACTTTTTTCGACGCCGCCCAGGCGCCACGTAACGTAATTAAGGCCATCGGTAGCAGAAAACTGAGGCTAATGAATTCGTCTATATACTTCGGATCCTATAAAACCCAGTTGTGTCTATCCCGAACATCGAATTTCAGTCGACCCTTCGGACGATACCATGTAAACTCTCAACCAGATTGCCACGTGGAAGATCTCGGCCTTTACTCCATTCGACAAGTGTCGTGTACCCCTTGCCACTATAAAGAGTATGATTGAGCCTTACAAGCGGTGCTCCATTTAGGATATGTAAGCTATAGAGGATTCCAAGCCGCGGTAGAGGAATGTCGTGATCGTACGTCCTTATTGGTAAGTACCGAAATGTCAGGTTTTCCCTTGCGTGGGTTCGTTCAGGGCATGGTAGGACCGCAAAGTAGATGTAGCAATGGAGATTCGTCATGATGAGAAGAGTAGATCAGGGCAAAGGCATTGGGAGTCCCCGCGTAATACCCAGTGATTTTTGCAAGTAAGCATGCTTATACTACGGCGGCGGTCCCAGACCAACGCAAAGCTTTTTGTGTATCCTCTAAACCTTTAAGAATCTGATTACGCCGGTACGAGCAGGCGACCATGTAAACTCTTTAAAGGTTAGACGAGACCGTGACTGTCTCCTTACCGGGGCATCAGCTTGATTTCAAGGGTTGTTCCATCAGGAACTCGCAGATAGGGTCTCTTGGGTGAGTGCGGCCCAGAGGAC"
	fmt.Println(transcribeDnaIntoRna(dna))
	//Complementing a Strand of DNA
	dna ="ACGCTATGTTAATATGTCGGTTCCGGGTATGCCCAGTGCGGATATGGTGATAGATTGCCAGAACTAGTTTCTCGGCCACCGTCGAAGTAACTGAACACGGAGTATACTATGCCGGGTTTCATCCACCCAGAATCAACGATTATTAAGTTCTCAAAGTCTATCCGAACCAGTCTTTGCGGAGGCGATATTATCGTTAACCAATGGTGTCTTACAGACTTACATGCACTAAGCGGGGATCGCGGGGAATATGAACTCGCCCGGGGGGGACCAAAACCCCCCCCCAGTTTGCTGTGGGGATATGACGCCCATCGGTTCTAGACGTTTACGGGCCCCCGTACCTAATTGCAGTAGGTCGTTGTAGCTGCCCCGTAAATAACCTTAAAGCGAGACAAGCAGTTCGAGGACTGAGCATCCCACTGCGTCGCCCTGCGTCCGTCCGACACGAAAGTCAAAGTATGGCGACGGTTAGGTGGCGCACTTCCGGATAGTCGATGTTAGCGATCTTGAGAATTTAAGAGCCACGCATCACGACGATGCCCGTTGGGTCCTTTCTTACGACCAGATTCATCGTTCCCGTCCGTGAAGCACTTACTGGTCTATTTTGTGTTTCTGATCTACTTCCTTACATTGCTTGTTACATGAAATGAGAGCCTTGGCCGAATCTTATTGGACTTCGGGCTTGTGGGTGTCAATGGGAGGTTGCGGGAGTGTTCGTTAATGTAAGCTTGCCACTAAACTGTAAGCAGGTCCACATACAGACAACGTGGGCGTAGATATCTGCGATACGAGGAACAAATTGCCTGGGCCCCAACAGTTTACATGTAGCGACGGCTTCACTCCTCGCCCTAGGCTGAAGTGAGATCTCATCAGAAGAGTTAGCGCAGACAGTCAGTCTACGCATT"
	fmt.Println(complementStrandOfDna(dna))


}

func countDnaNucleotides(dna string)(int,int,int,int){
	return strings.Count(dna, "A"),strings.Count(dna, "C"),strings.Count(dna, "G"),strings.Count(dna, "T")
}

func transcribeDnaIntoRna(dna string)(string){
	return strings.Replace(dna, "T","U", -1)
}

func complementStrandOfDna(dna string)(string){
	rune := make([]rune, len(dna))
	for i, r:= range dna{
		rune[i] = r
	}

	for i := 0; i < len(dna)/2; i++{
		rune[i], rune[len(dna) - 1 - i] = rune[len(dna) - 1 - i], rune[i]
	}
	//Didn't find a better way to replace stuff
	r := strings.NewReplacer("T", "a", "G", "c")
	r2 := strings.NewReplacer("A", "T", "C", "G")
	r3 := strings.NewReplacer("a", "A", "c", "C" )
	complement := string(rune)

	return r3.Replace(r2.Replace(r.Replace(complement)))
}
